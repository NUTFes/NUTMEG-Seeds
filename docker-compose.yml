version: "3"
services:
  seeds_db:
    image: postgres:12
    volumes:
      - mysql-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: myapp_development
      POSTGRES_USER: seeds
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  seeds_api:
    build: ./api
    container_name: "seeds_api"
    ports:
      - "3000:3000"
    command: /bin/sh -c "rm -f tmp/pids/server.pid && rails server -b 0.0.0.0"
    volumes:
      - ./api:/myapp
    depends_on:
      seeds_db:
        condition: service_started

  hasura:
    build:
      context: .docker
      dockerfile: hasura.Dockerfile
    container_name: "seeds_hasura"
    ports:
      - "8082:8080"
    # restart: always
    volumes:
      - ./hasura:/hasura
    environment:
      HASURA_GRAPHQL_MIGRATIONS_DIR: /hasura/migrations
      HASURA_GRAPHQL_METADATA_DIR: /hasura/metadata
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_DATABASE_URL: postgres://seeds:password@seeds_db:5432/myapp_development
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
    depends_on:
      seeds_db:
        condition: service_healthy

  seeds_view:
    build: ./view
    container_name: "seeds_view"
    ports:
      - "8080:8080"
    command: sh -c "npm install && npm run dev"
    volumes:
      - ./view:/app
    environment:
      - SEEDS_API_URI=http://localhost:3000
    depends_on:
      seeds_api:
        condition: service_started

volumes:
  mysql-data:
    driver: local
